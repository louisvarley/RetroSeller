<?php

namespace DoctrineProxies\__CG__\App\Models;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Sale extends \App\Models\Sale implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'sale_vendor', 'payment_vendor', 'purchases', 'date', 'gross_amount', 'postage_cost', 'fee_cost', 'ebay_item_no', 'accounts'];
        }

        return ['__isInitialized__', 'id', 'sale_vendor', 'payment_vendor', 'purchases', 'date', 'gross_amount', 'postage_cost', 'fee_cost', 'ebay_item_no', 'accounts'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Sale $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEbayItemNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEbayItemNo', []);

        return parent::getEbayItemNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setEbayItemNo($ebay_item_no)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEbayItemNo', [$ebay_item_no]);

        return parent::setEbayItemNo($ebay_item_no);
    }

    /**
     * {@inheritDoc}
     */
    public function getGrossAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGrossAmount', []);

        return parent::getGrossAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setGrossAmount($gross_amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGrossAmount', [$gross_amount]);

        return parent::setGrossAmount($gross_amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostageCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostageCost', []);

        return parent::getPostageCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostageCost($postage_cost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostageCost', [$postage_cost]);

        return parent::setPostageCost($postage_cost);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeeCost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeeCost', []);

        return parent::getFeeCost();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeeCost($fee_cost)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeeCost', [$fee_cost]);

        return parent::setFeeCost($fee_cost);
    }

    /**
     * {@inheritDoc}
     */
    public function getPurchases()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurchases', []);

        return parent::getPurchases();
    }

    /**
     * {@inheritDoc}
     */
    public function getAccounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccounts', []);

        return parent::getAccounts();
    }

    /**
     * {@inheritDoc}
     */
    public function getSaleVendor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSaleVendor', []);

        return parent::getSaleVendor();
    }

    /**
     * {@inheritDoc}
     */
    public function setSaleVendor($sale_vendor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSaleVendor', [$sale_vendor]);

        return parent::setSaleVendor($sale_vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentVendor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentVendor', []);

        return parent::getPaymentVendor();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentVendor($payment_vendor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentVendor', [$payment_vendor]);

        return parent::setPaymentVendor($payment_vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getNetAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNetAmount', []);

        return parent::getNetAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getPurchaseSpendAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurchaseSpendAmount', []);

        return parent::getPurchaseSpendAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getProfitAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfitAmount', []);

        return parent::getProfitAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function getPurchasesString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPurchasesString', []);

        return parent::getPurchasesString();
    }

}
